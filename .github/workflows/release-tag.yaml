name: Release and Tag

on:
  push:
    branches:
      - main  # Replace 'main' with your default branch name

jobs:
  release_and_tag:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history is fetched for tagging

      # Step 2: Check for changes
      - name: Check for Changes
        id: changes
        run: |
          if [ -z "$(git diff --name-only HEAD^ HEAD)" ]; then
            echo "No changes detected."
            echo "changed=false" >> $GITHUB_ENV
          else
            echo "Changes detected."
            echo "changed=true" >> $GITHUB_ENV
          fi

      # Step 3: Exit if no changes
      - name: Exit if No Changes
        if: env.changed == 'false'
        run: echo "No changes in Kubernetes Infra files. Skipping release."

      # Step 4: Generate a new tag
      - name: Generate New Tag
        if: env.changed == 'true'
        id: generate_tag
        run: |
          TODAY=$(date +%Y-%m-%d)
          PATCH_FILE=".patch_version"

          # Initialize patch version if the file does not exist
          if [ ! -f "$PATCH_FILE" ]; then
            echo "0" > "$PATCH_FILE"
          fi

          # Read and increment the patch version
          PATCH=$(cat "$PATCH_FILE")
          PATCH=$((PATCH + 1))
          echo "$PATCH" > "$PATCH_FILE"

          # Generate the new tag
          NEW_TAG="v$TODAY.$PATCH"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "Generated new tag: $NEW_TAG"

      # Step 5: Create a tag and push
      - name: Create and Push Tag
        if: env.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$NEW_TAG" -m "Release $NEW_TAG"
          git push origin "$NEW_TAG"

      # Step 6: Create a GitHub release
      - name: Create GitHub Release
        if: env.changed == 'true'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: ${{ env.NEW_TAG }}
          body: "Release ${{ env.NEW_TAG }} created automatically."
          draft: false
          prerelease: false
