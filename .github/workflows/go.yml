name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  checkout-code:
    name: Checkout Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

  build-code:
    name: Build Code
    runs-on: ubuntu-latest
    needs: checkout-code
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.2  # Specify your Go version
          
      - name: Install Dependencies
        run: |
          cd $GITHUB_WORKSPACE  # Ensure we're in the workspace directory
          go mod tidy
          go mod download
          
      - name: Build Go Application
        run: |
          cd $GITHUB_WORKSPACE  # Ensure we're in the workspace directory
          go build -o app ./main.go
          
      - name: Run Tests
        run: |
          cd $GITHUB_WORKSPACE  # Ensure we're in the workspace directory
          go test ./...  # Run all tests in the module

      - name: Upload Code Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-binary
          path: ./app

  sonar-scan:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs: build-code
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3  # Required for SonarQube analysis

      - name: Install SonarScanner
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre-headless
          curl -Ls https://github.com/SonarSource/sonar-scanner-cli/releases/latest/download/sonar-scanner-cli-4.6.2.2472-linux.zip --output sonar-scanner.zip
          unzip sonar-scanner.zip -d $HOME/sonar-scanner
          export PATH="$HOME/sonar-scanner/sonar-scanner-4.6.2.2472-linux/bin:$PATH"
          
      - name: Run SonarQube Analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dsonar.organization=$SONAR_ORG \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: sonar-scan
    steps:
      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      
      - name: Build Docker Image
        run: |
          cd $GITHUB_WORKSPACE  # Ensure we're in the workspace directory
          docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
      
      - name: Push Docker Image
        run: |
          docker push $DOCKER_IMAGE:$DOCKER_TAG

  docker-image-scan:
    name: Trivy Scan Docker Image
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/scripts/install.sh | sh
      
      - name: Scan Docker Image
        run: |
          trivy image $DOCKER_IMAGE:$DOCKER_TAG
