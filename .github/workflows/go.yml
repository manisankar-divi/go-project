name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout code
      - name: Checkout source code
        uses: actions/checkout@v4

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'

      # Step 3: Install Go dependencies
      - name: Install Go dependencies
        run: go mod download

      # Step 4: Run Go tests
      - name: Run Go tests
        run: go test ./...

      # Step 5: Build the Go application
      - name: Build Go application
        run: |
          mkdir -p dist
          go build -o dist/main ./...

      # Step 6: Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: go-artifact
          path: dist
          if-no-files-found: warn

      # Step 7: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 8: Docker login to Docker Hub using GitHub secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 9: Read version from VERSION file and set environment variable
      - name: Set Docker image version
        id: set_version
        run: |
          VERSION=$(cat VERSION | xargs)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Step 10: Build and push Docker image securely
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.VERSION }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.VERSION }}
          
      # Step 11: Update Kubernetes manifest with new image version
      - name: Update Kubernetes manifest with image version
        run: |
          # Clone the Kubernetes repository securely
          git clone ${{ secrets.KUBERNETES_REPO }}
          ls -la
          cd k8s-repo
          
          # Use sed to replace the image version in the manifest
          sed -i "s|image: .*|image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.VERSION }}|" manifest.yaml

          # Echo the updated line(s) in manifest.yaml to verify the change
          echo "Updated manifest.yaml:"
          grep "image:" manifest.yaml
          
          # Commit the changes and push to the repository
          git config --global user.name "${{ secrets.GIT_USERNAME }}"
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git add manifest.yaml
          git commit -m "Updated manifest.yaml with Docker image version ${{ env.VERSION }}"
          git push https://x-access-token:${{ secrets.GIT_ACCESS_TOKEN }}@github.com/${{ secrets.KUBERNETES_REPO }} main
