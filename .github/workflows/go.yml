name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to 'main' branch

jobs:
  build_and_scan:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: SonarCloud Scan
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v3.1.0  
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Step 3: Check Quality Gate
      - name: Wait for analysis to complete
        run: sleep 15

      # Step: Check Quality Gate
      - name: Check Quality Gate
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.SONAR_TOKEN }}" \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=Soubarniya_ci-cd")
      
          echo "Response: $RESPONSE"
          
          STATUS=$(echo "$RESPONSE" | jq -r .projectStatus.status)
      
          # Check if Quality Gate is OK
          if [ "$STATUS" != "OK" ]; then
            echo "Quality Gate failed: $STATUS"
            exit 1
          else
            echo "Quality Gate passed."
            
            # Optionally, check specific conditions
            CONDITIONS=$(echo "$RESPONSE" | jq -r '.projectStatus.conditions[] | "\(.metricKey): \(.actualValue) - Status: \(.status)"')
            echo "Conditions status:"
            echo "$CONDITIONS"
          fi

      # Step 4: Set up Go environment
      - name: Set up Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'

      # Step 5: Build the application
      - name: Build the application
        run: go build -o main.go

      # Step 6: Upload build artifacts
      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: artifacts
      #     path: artifact.zip
          
      - name: List files
        run: pwd && ls -lh 

 
