name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # CodeQL Analysis Job
  codeql:
    runs-on: ubuntu-latest
    name: "Run CodeQL Analysis"
    strategy:
      matrix:
        language: [go]  # Here you can add more languages as needed, like python, java, etc.
        build-mode: ["automatic", "manual"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up CodeQL
        uses: github/codeql-action/setup-codeql@v2  # Setup CodeQL tool

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}  # Defines the language(s) to analyze (go in this case)
          build-mode: ${{ matrix.build-mode }}  # Defines whether to build automatically or manually

      # If build mode is manual, you'll need to manually build your code (optional)
      - name: Build code (manual)
        if: matrix.build-mode == 'manual'
        run: |
          echo 'If you are using a "manual" build mode for the Go language, replace this with the build commands for your project.'
          echo 'Example: go build ./...'
          exit 1  # For demonstration purposes, replace this with actual build commands

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"  # Specifies the language category for the analysis
          
      - name: Upload CodeQL results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: codeql-results.sarif  # Upload the SARIF report for further use (GitHub UI)

  # Build and Deploy Job
  build_and_deploy:
    runs-on: ubuntu-latest
    needs: codeql  # This ensures that build & deploy only happens after CodeQL analysis is done
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'

      - name: Install dependencies
        run: go mod download

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/.go/pkg/mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-mod-
          
      - name: Test with the Go CLI
        run: go test ./...

      - name: Build the application
        run: |
          mkdir -p dist
          go build -o dist/main ./...

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: dist
          if-no-files-found: warn

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Read version from VERSION file
        id: read_version
        run: |
          VERSION=$(cat VERSION | xargs)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t manisankardivi/new:${{ env.VERSION }} .
          docker push manisankardivi/new:${{ env.VERSION }}

      - name: Update Image Version and Push Changes
        run: |
          git clone https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/manisankar-divi/k8s-repo.git
          cd k8s-repo
      
          # Update image in manifest.yaml
          sed -i "s|image: manisankardivi/new:.*|image: manisankardivi/new:${{ env.VERSION }}|" manifest.yaml
      
          # Verify changes
          git status
          git diff
      
          # Configure Git
          git config --global user.email "manisankar-divi@gmail.com"
          git config --global user.name "manisankar-divi"
      
          # Commit and push changes if thereâ€™s an update
          if git diff --exit-code --quiet; then
            echo "No changes to commit."
          else
            git add manifest.yaml
            git commit -m "Updated manifest.yaml with version ${{ env.VERSION }} | GitHub Actions Pipeline"
            git push origin main
